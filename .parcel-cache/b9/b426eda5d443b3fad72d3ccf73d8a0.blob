var _react2 = require("react");
var _react = $parcel$interopDefault(_react2);
var { forwardRef  } = _react2;
var { filterDOMProps  } = require("@react-aria/utils");
var { classNames , useDOMRef , useStyleProps  } = require("@react-spectrum/utils");
var _babelRuntimeHelpersObjectWithoutPropertiesLoose = $parcel$interopDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _babelRuntimeHelpersExtends = $parcel$interopDefault(require("@babel/runtime/helpers/extends"));
require("./main.css");
function $parcel$interopDefault(a) {
    return a && a.__esModule ? a.default : a;
}
// ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/well/vars.css
var $a130fdabd783f318e8c35e8a239$exports = {
};
$a130fdabd783f318e8c35e8a239$exports = {
    "spectrum-Well": "_spectrum-Well_daead"
};
var $a130fdabd783f318e8c35e8a239$$interop$default = $parcel$interopDefault($a130fdabd783f318e8c35e8a239$exports);
function $ebf17523e38960cd1bcede856a195$var$Well(props, ref) {
    let { children , role  } = props, otherProps = _babelRuntimeHelpersObjectWithoutPropertiesLoose(props, [
        "children",
        "role"
    ]);
    let domRef = useDOMRef(ref);
    let { styleProps  } = useStyleProps(otherProps);
    if (!role && (props['aria-label'] || props['aria-labelledby'])) console.warn('A labelled Well must have a role.');
    return(/*#__PURE__*/ _react.createElement("div", _babelRuntimeHelpersExtends({
    }, filterDOMProps(otherProps, {
        labelable: !!role
    }), styleProps, {
        role: role,
        ref: domRef,
        className: classNames($a130fdabd783f318e8c35e8a239$$interop$default, 'spectrum-Well', styleProps.className)
    }), children));
}
/**
 * A Well is a content container that displays non-editable content separate from other content on the screen.
 * Often this is used to display preformatted text, such as code/markup examples on a documentation page.
 */ const Well = /*#__PURE__*/ forwardRef($ebf17523e38960cd1bcede856a195$var$Well);
exports.Well = Well;
