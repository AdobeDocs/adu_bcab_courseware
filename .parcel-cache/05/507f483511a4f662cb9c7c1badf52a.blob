var { useProgressBar  } = require("@react-aria/progress");
var _babelRuntimeHelpersExtends = $parcel$interopDefault(require("@babel/runtime/helpers/extends"));
function $parcel$interopDefault(a) {
    return a && a.__esModule ? a.default : a;
}
/**
 * Provides the accessibility implementation for a meter component.
 * Meters represent a quantity within a known range, or a fractional value.
 */ function useMeter(props) {
    let { progressBarProps , labelProps  } = useProgressBar(props);
    return {
        meterProps: _babelRuntimeHelpersExtends({
        }, progressBarProps, {
            // Use the meter role if available, but fall back to progressbar if not
            // Chrome currently falls back from meter automatically, and Firefox
            // does not support meter at all. Safari 13+ seems to support meter properly.
            // https://bugs.chromium.org/p/chromium/issues/detail?id=944542
            // https://bugzilla.mozilla.org/show_bug.cgi?id=1460378
            role: 'meter progressbar'
        }),
        labelProps
    };
}
exports.useMeter = useMeter;
