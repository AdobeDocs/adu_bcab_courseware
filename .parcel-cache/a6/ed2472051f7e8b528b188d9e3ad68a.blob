var { useSpinButton  } = require("@react-aria/spinbutton");
var { useMessageFormatter , useNumberFormatter  } = require("@react-aria/i18n");
var { useFormattedTextField  } = require("@react-aria/textfield");
var { useFocus , useFocusWithin , useScrollWheel  } = require("@react-aria/interactions");
var { isAndroid , isIOS , isIPhone , mergeProps , useId  } = require("@react-aria/utils");
var { useCallback , useMemo , useState  } = require("react");
var _babelRuntimeHelpersInteropRequireDefault = $parcel$interopDefault(require("@babel/runtime/helpers/interopRequireDefault"));
var _babelRuntimeHelpersExtends = $parcel$interopDefault(require("@babel/runtime/helpers/extends"));
function $parcel$interopDefault(a) {
    return a && a.__esModule ? a.default : a;
}
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/ar-AE.json
var $bb445d18f084f340ccf67353487c16$exports = {
};
$bb445d18f084f340ccf67353487c16$exports = JSON.parse("{\"decrease\":\"خفض {fieldLabel}\",\"increase\":\"زيادة {fieldLabel}\",\"numberField\":\"حقل رقمي\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/bg-BG.json
var $ed6d795c880a0ab9c214b9003f1a43$exports = {
};
$ed6d795c880a0ab9c214b9003f1a43$exports = JSON.parse("{\"decrease\":\"Намаляване {fieldLabel}\",\"increase\":\"Усилване {fieldLabel}\",\"numberField\":\"Номер на полето\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/cs-CZ.json
var $a4fa5907cb6ec4ef05d8194cd9b3c6b9$exports = {
};
$a4fa5907cb6ec4ef05d8194cd9b3c6b9$exports = JSON.parse("{\"decrease\":\"Snížit {fieldLabel}\",\"increase\":\"Zvýšit {fieldLabel}\",\"numberField\":\"Číselné pole\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/da-DK.json
var $af89a3f199f96b4b2f53fc09970add7a$exports = {
};
$af89a3f199f96b4b2f53fc09970add7a$exports = JSON.parse("{\"decrease\":\"Reducer {fieldLabel}\",\"increase\":\"Øg {fieldLabel}\",\"numberField\":\"Talfelt\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/de-DE.json
var $b0341cdc3c5ab5e88b4f2cbd32e56479$exports = {
};
$b0341cdc3c5ab5e88b4f2cbd32e56479$exports = JSON.parse("{\"decrease\":\"{fieldLabel} verringern\",\"increase\":\"{fieldLabel} erhöhen\",\"numberField\":\"Nummernfeld\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/el-GR.json
var $d0de24a5d89f4698e53e6427ab9502$exports = {
};
$d0de24a5d89f4698e53e6427ab9502$exports = JSON.parse("{\"decrease\":\"Μείωση {fieldLabel}\",\"increase\":\"Αύξηση {fieldLabel}\",\"numberField\":\"Πεδίο αριθμού\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/en-US.json
var $ca2b757c6100accb55e4393f5$exports = {
};
$ca2b757c6100accb55e4393f5$exports = JSON.parse("{\"decrease\":\"Decrease {fieldLabel}\",\"increase\":\"Increase {fieldLabel}\",\"numberField\":\"Number field\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/es-ES.json
var $f31ea545ffa161b5fb56650a118d07f$exports = {
};
$f31ea545ffa161b5fb56650a118d07f$exports = JSON.parse("{\"decrease\":\"Reducir {fieldLabel}\",\"increase\":\"Aumentar {fieldLabel}\",\"numberField\":\"Campo de número\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/et-EE.json
var $b112b56324926292d7470a7621f1f$exports = {
};
$b112b56324926292d7470a7621f1f$exports = JSON.parse("{\"decrease\":\"Vähenda {fieldLabel}\",\"increase\":\"Suurenda {fieldLabel}\",\"numberField\":\"Numbri väli\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/fi-FI.json
var $b9ff6794fa67f0ef93f0dcffb86cc31$exports = {
};
$b9ff6794fa67f0ef93f0dcffb86cc31$exports = JSON.parse("{\"decrease\":\"Vähennä {fieldLabel}\",\"increase\":\"Lisää {fieldLabel}\",\"numberField\":\"Numerokenttä\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/fr-FR.json
var $ac97a9a52baebde094acea488ec586$exports = {
};
$ac97a9a52baebde094acea488ec586$exports = JSON.parse("{\"decrease\":\"Diminuer {fieldLabel}\",\"increase\":\"Augmenter {fieldLabel}\",\"numberField\":\"Champ de nombre\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/he-IL.json
var $a817963177f04fe858962588b15e3$exports = {
};
$a817963177f04fe858962588b15e3$exports = JSON.parse("{\"decrease\":\"הקטן {fieldLabel}\",\"increase\":\"הגדל {fieldLabel}\",\"numberField\":\"שדה מספר\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/hr-HR.json
var $d73bb32bb7f8bac6e5dc11e732223c08$exports = {
};
$d73bb32bb7f8bac6e5dc11e732223c08$exports = JSON.parse("{\"decrease\":\"Smanji {fieldLabel}\",\"increase\":\"Povećaj {fieldLabel}\",\"numberField\":\"Polje broja\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/hu-HU.json
var $e71664d22d716ff0ef6add2132$exports = {
};
$e71664d22d716ff0ef6add2132$exports = JSON.parse("{\"decrease\":\"{fieldLabel} csökkentése\",\"increase\":\"{fieldLabel} növelése\",\"numberField\":\"Számmező\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/it-IT.json
var $cfbad042bd5b73285229d9afcc6cf6$exports = {
};
$cfbad042bd5b73285229d9afcc6cf6$exports = JSON.parse("{\"decrease\":\"Riduci {fieldLabel}\",\"increase\":\"Aumenta {fieldLabel}\",\"numberField\":\"Campo numero\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/ja-JP.json
var $b1ee0d48af31cdbaf4266405ccf9370$exports = {
};
$b1ee0d48af31cdbaf4266405ccf9370$exports = JSON.parse("{\"decrease\":\"{fieldLabel}を縮小\",\"increase\":\"{fieldLabel}を拡大\",\"numberField\":\"数値フィールド\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/ko-KR.json
var $dab39e0e634f48a0b5f7165f6c6d3c$exports = {
};
$dab39e0e634f48a0b5f7165f6c6d3c$exports = JSON.parse("{\"decrease\":\"{fieldLabel} 감소\",\"increase\":\"{fieldLabel} 증가\",\"numberField\":\"번호 필드\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/lt-LT.json
var $b043632ea67e0dfa620af42a79b561f6$exports = {
};
$b043632ea67e0dfa620af42a79b561f6$exports = JSON.parse("{\"decrease\":\"Sumažinti {fieldLabel}\",\"increase\":\"Padidinti {fieldLabel}\",\"numberField\":\"Numerio laukas\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/lv-LV.json
var $f3ea210b36ecef8645290573d6e8d616$exports = {
};
$f3ea210b36ecef8645290573d6e8d616$exports = JSON.parse("{\"decrease\":\"Samazināšana {fieldLabel}\",\"increase\":\"Palielināšana {fieldLabel}\",\"numberField\":\"Skaitļu lauks\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/nb-NO.json
var $ccc61cfcd514f82dac599f764ba71c5$exports = {
};
$ccc61cfcd514f82dac599f764ba71c5$exports = JSON.parse("{\"decrease\":\"Reduser {fieldLabel}\",\"increase\":\"Øk {fieldLabel}\",\"numberField\":\"Tallfelt\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/nl-NL.json
var $dd9d3b704bf07be5389470b29747b9de$exports = {
};
$dd9d3b704bf07be5389470b29747b9de$exports = JSON.parse("{\"decrease\":\"{fieldLabel} verlagen\",\"increase\":\"{fieldLabel} verhogen\",\"numberField\":\"Getalveld\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/pl-PL.json
var $bebe1ea9ac232e6902e0f72406e44eb$exports = {
};
$bebe1ea9ac232e6902e0f72406e44eb$exports = JSON.parse("{\"decrease\":\"Zmniejsz {fieldLabel}\",\"increase\":\"Zwiększ {fieldLabel}\",\"numberField\":\"Pole numeru\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/pt-BR.json
var $d6e8889105da4f40a98b889847bbfde2$exports = {
};
$d6e8889105da4f40a98b889847bbfde2$exports = JSON.parse("{\"decrease\":\"Diminuir {fieldLabel}\",\"increase\":\"Aumentar {fieldLabel}\",\"numberField\":\"Campo de número\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/pt-PT.json
var $c8137a1fbba7abca411e8082204660c0$exports = {
};
$c8137a1fbba7abca411e8082204660c0$exports = JSON.parse("{\"decrease\":\"Diminuir {fieldLabel}\",\"increase\":\"Aumentar {fieldLabel}\",\"numberField\":\"Campo numérico\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/ro-RO.json
var $f60ff373d7de3cba59f4218efd24b7cd$exports = {
};
$f60ff373d7de3cba59f4218efd24b7cd$exports = JSON.parse("{\"decrease\":\"Scădere {fieldLabel}\",\"increase\":\"Creștere {fieldLabel}\",\"numberField\":\"Câmp numeric\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/ru-RU.json
var $c6d4d6cf5803f02ca818e8202$exports = {
};
$c6d4d6cf5803f02ca818e8202$exports = JSON.parse("{\"decrease\":\"Уменьшение {fieldLabel}\",\"increase\":\"Увеличение {fieldLabel}\",\"numberField\":\"Числовое поле\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/sk-SK.json
var $ca65c03b648624f7b8097f49088764f$exports = {
};
$ca65c03b648624f7b8097f49088764f$exports = JSON.parse("{\"decrease\":\"Znížiť {fieldLabel}\",\"increase\":\"Zvýšiť {fieldLabel}\",\"numberField\":\"Číselné pole\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/sl-SI.json
var $d9d6de340774d4c29f6a37a5f2255f7b$exports = {
};
$d9d6de340774d4c29f6a37a5f2255f7b$exports = JSON.parse("{\"decrease\":\"Upadati {fieldLabel}\",\"increase\":\"Povečajte {fieldLabel}\",\"numberField\":\"Številčno polje\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/sr-SP.json
var $d48f74261c92cefae6f19ede6151219$exports = {
};
$d48f74261c92cefae6f19ede6151219$exports = JSON.parse("{\"decrease\":\"Decrease {fieldLabel}\",\"increase\":\"Increase {fieldLabel}\",\"numberField\":\"Number field\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/sv-SE.json
var $e5a7f1976917a2974f369962ea0bf95$exports = {
};
$e5a7f1976917a2974f369962ea0bf95$exports = JSON.parse("{\"decrease\":\"Minska {fieldLabel}\",\"increase\":\"Öka {fieldLabel}\",\"numberField\":\"Nummerfält\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/tr-TR.json
var $f2bd2269a5c765cf56d6d26edac3d2$exports = {
};
$f2bd2269a5c765cf56d6d26edac3d2$exports = JSON.parse("{\"decrease\":\"{fieldLabel} azalt\",\"increase\":\"{fieldLabel} arttır\",\"numberField\":\"Sayı alanı\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/uk-UA.json
var $ee881c3a5d0951c202f061fbe957e$exports = {
};
$ee881c3a5d0951c202f061fbe957e$exports = JSON.parse("{\"decrease\":\"Зменшити {fieldLabel}\",\"increase\":\"Збільшити {fieldLabel}\",\"numberField\":\"Поле номера\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/zh-CN.json
var $ed2e7ec62a1fc30780141b5ce26b663$exports = {
};
$ed2e7ec62a1fc30780141b5ce26b663$exports = JSON.parse("{\"decrease\":\"降低 {fieldLabel}\",\"increase\":\"提高 {fieldLabel}\",\"numberField\":\"数字字段\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/numberfield/intl/zh-TW.json
var $e5db46fc5bab2e1cddabb46042e67b$exports = {
};
$e5db46fc5bab2e1cddabb46042e67b$exports = JSON.parse("{\"decrease\":\"縮小 {fieldLabel}\",\"increase\":\"放大 {fieldLabel}\",\"numberField\":\"數字欄位\"}");
// @ts-ignore
const $ebb253b0ca493f114f41772a028a$var$intlMessages = {
    "ar-AE": _babelRuntimeHelpersInteropRequireDefault($bb445d18f084f340ccf67353487c16$exports).default,
    "bg-BG": _babelRuntimeHelpersInteropRequireDefault($ed6d795c880a0ab9c214b9003f1a43$exports).default,
    "cs-CZ": _babelRuntimeHelpersInteropRequireDefault($a4fa5907cb6ec4ef05d8194cd9b3c6b9$exports).default,
    "da-DK": _babelRuntimeHelpersInteropRequireDefault($af89a3f199f96b4b2f53fc09970add7a$exports).default,
    "de-DE": _babelRuntimeHelpersInteropRequireDefault($b0341cdc3c5ab5e88b4f2cbd32e56479$exports).default,
    "el-GR": _babelRuntimeHelpersInteropRequireDefault($d0de24a5d89f4698e53e6427ab9502$exports).default,
    "en-US": _babelRuntimeHelpersInteropRequireDefault($ca2b757c6100accb55e4393f5$exports).default,
    "es-ES": _babelRuntimeHelpersInteropRequireDefault($f31ea545ffa161b5fb56650a118d07f$exports).default,
    "et-EE": _babelRuntimeHelpersInteropRequireDefault($b112b56324926292d7470a7621f1f$exports).default,
    "fi-FI": _babelRuntimeHelpersInteropRequireDefault($b9ff6794fa67f0ef93f0dcffb86cc31$exports).default,
    "fr-FR": _babelRuntimeHelpersInteropRequireDefault($ac97a9a52baebde094acea488ec586$exports).default,
    "he-IL": _babelRuntimeHelpersInteropRequireDefault($a817963177f04fe858962588b15e3$exports).default,
    "hr-HR": _babelRuntimeHelpersInteropRequireDefault($d73bb32bb7f8bac6e5dc11e732223c08$exports).default,
    "hu-HU": _babelRuntimeHelpersInteropRequireDefault($e71664d22d716ff0ef6add2132$exports).default,
    "it-IT": _babelRuntimeHelpersInteropRequireDefault($cfbad042bd5b73285229d9afcc6cf6$exports).default,
    "ja-JP": _babelRuntimeHelpersInteropRequireDefault($b1ee0d48af31cdbaf4266405ccf9370$exports).default,
    "ko-KR": _babelRuntimeHelpersInteropRequireDefault($dab39e0e634f48a0b5f7165f6c6d3c$exports).default,
    "lt-LT": _babelRuntimeHelpersInteropRequireDefault($b043632ea67e0dfa620af42a79b561f6$exports).default,
    "lv-LV": _babelRuntimeHelpersInteropRequireDefault($f3ea210b36ecef8645290573d6e8d616$exports).default,
    "nb-NO": _babelRuntimeHelpersInteropRequireDefault($ccc61cfcd514f82dac599f764ba71c5$exports).default,
    "nl-NL": _babelRuntimeHelpersInteropRequireDefault($dd9d3b704bf07be5389470b29747b9de$exports).default,
    "pl-PL": _babelRuntimeHelpersInteropRequireDefault($bebe1ea9ac232e6902e0f72406e44eb$exports).default,
    "pt-BR": _babelRuntimeHelpersInteropRequireDefault($d6e8889105da4f40a98b889847bbfde2$exports).default,
    "pt-PT": _babelRuntimeHelpersInteropRequireDefault($c8137a1fbba7abca411e8082204660c0$exports).default,
    "ro-RO": _babelRuntimeHelpersInteropRequireDefault($f60ff373d7de3cba59f4218efd24b7cd$exports).default,
    "ru-RU": _babelRuntimeHelpersInteropRequireDefault($c6d4d6cf5803f02ca818e8202$exports).default,
    "sk-SK": _babelRuntimeHelpersInteropRequireDefault($ca65c03b648624f7b8097f49088764f$exports).default,
    "sl-SI": _babelRuntimeHelpersInteropRequireDefault($d9d6de340774d4c29f6a37a5f2255f7b$exports).default,
    "sr-SP": _babelRuntimeHelpersInteropRequireDefault($d48f74261c92cefae6f19ede6151219$exports).default,
    "sv-SE": _babelRuntimeHelpersInteropRequireDefault($e5a7f1976917a2974f369962ea0bf95$exports).default,
    "tr-TR": _babelRuntimeHelpersInteropRequireDefault($f2bd2269a5c765cf56d6d26edac3d2$exports).default,
    "uk-UA": _babelRuntimeHelpersInteropRequireDefault($ee881c3a5d0951c202f061fbe957e$exports).default,
    "zh-CN": _babelRuntimeHelpersInteropRequireDefault($ed2e7ec62a1fc30780141b5ce26b663$exports).default,
    "zh-TW": _babelRuntimeHelpersInteropRequireDefault($e5db46fc5bab2e1cddabb46042e67b$exports).default
};
/**
 * Provides the behavior and accessibility implementation for a number field component.
 * Number fields allow users to enter a number, and increment or decrement the value using stepper buttons.
 */ function useNumberField(props, state, inputRef) {
    let { id , decrementAriaLabel , incrementAriaLabel , isDisabled , isReadOnly , isRequired , minValue , maxValue , autoFocus , validationState , label , formatOptions , onBlur , onFocus , onFocusChange , onKeyDown , onKeyUp  } = props;
    let { increment , incrementToMax , decrement , decrementToMin , numberValue , commit  } = state;
    const formatMessage = useMessageFormatter($ebb253b0ca493f114f41772a028a$var$intlMessages);
    let inputId = useId(id);
    let { focusProps  } = useFocus({
        onBlur: ()=>{
            // Set input value to normalized valid value
            commit();
        }
    });
    let { spinButtonProps , incrementButtonProps: incButtonProps , decrementButtonProps: decButtonProps  } = useSpinButton({
        isDisabled,
        isReadOnly,
        isRequired,
        maxValue,
        minValue,
        onIncrement: increment,
        onIncrementToMax: incrementToMax,
        onDecrement: decrement,
        onDecrementToMin: decrementToMin,
        value: numberValue,
        textValue: state.inputValue
    });
    let [focusWithin, setFocusWithin] = useState(false);
    let { focusWithinProps  } = useFocusWithin({
        isDisabled,
        onFocusWithinChange: setFocusWithin
    });
    let onWheel = useCallback((e)=>{
        // if on a trackpad, users can scroll in both X and Y at once, check the magnitude of the change
        // if it's mostly in the X direction, then just return, the user probably doesn't mean to inc/dec
        // this isn't perfect, events come in fast with small deltas and a part of the scroll may give a false indication
        // especially if the user is scrolling near 45deg
        if (Math.abs(e.deltaY) <= Math.abs(e.deltaX)) return;
        if (e.deltaY > 0) increment();
        else if (e.deltaY < 0) decrement();
    }, [
        decrement,
        increment
    ]); // If the input isn't supposed to receive input, disable scrolling.
    let scrollingDisabled = isDisabled || isReadOnly || !focusWithin;
    useScrollWheel({
        onScroll: onWheel,
        isDisabled: scrollingDisabled
    }, inputRef); // The inputMode attribute influences the software keyboard that is shown on touch devices.
    // Browsers and operating systems are quite inconsistent about what keys are available, however.
    // We choose between numeric and decimal based on whether we allow negative and fractional numbers,
    // and based on testing on various devices to determine what keys are available in each inputMode.
    let numberFormatter = useNumberFormatter(formatOptions);
    let intlOptions = useMemo(()=>numberFormatter.resolvedOptions()
    , [
        numberFormatter
    ]);
    let hasDecimals = intlOptions.maximumFractionDigits > 0;
    let hasNegative = isNaN(state.minValue) || state.minValue < 0;
    let inputMode = 'numeric';
    if (isIPhone()) {
        // iPhone doesn't have a minus sign in either numeric or decimal.
        // Note this is only for iPhone, not iPad, which always has both
        // minus and decimal in numeric.
        if (hasNegative) inputMode = 'text';
        else if (hasDecimals) inputMode = 'decimal';
    } else if (isAndroid()) {
        // Android numeric has both a decimal point and minus key.
        // decimal does not have a minus key.
        if (hasNegative) inputMode = 'numeric';
        else if (hasDecimals) inputMode = 'decimal';
    }
    let onChange = (value)=>{
        state.setInputValue(value);
    };
    let { labelProps , inputProps: textFieldProps  } = useFormattedTextField({
        label,
        autoFocus,
        isDisabled,
        isReadOnly,
        isRequired,
        validationState,
        value: state.inputValue,
        autoComplete: 'off',
        'aria-label': props['aria-label'] || null,
        'aria-labelledby': props['aria-labelledby'] || null,
        id: inputId,
        type: 'text',
        // Can't use type="number" because then we can't have things like $ in the field.
        inputMode,
        onChange,
        onBlur,
        onFocus,
        onFocusChange,
        onKeyDown,
        onKeyUp
    }, state, inputRef);
    let inputProps = mergeProps(spinButtonProps, textFieldProps, focusProps, {
        // override the spinbutton role, we can't focus a spin button with VO
        role: null,
        // ignore aria-roledescription on iOS so that required state will announce when it is present
        'aria-roledescription': !isIOS() ? formatMessage('numberField') : null,
        'aria-valuemax': null,
        'aria-valuemin': null,
        'aria-valuenow': null,
        'aria-valuetext': null,
        autoCorrect: 'off',
        spellCheck: 'false'
    });
    let onButtonPressStart = (e)=>{
        // If focus is already on the input, keep it there so we don't hide the
        // software keyboard when tapping the increment/decrement buttons.
        if (document.activeElement === inputRef.current) return;
         // Otherwise, when using a mouse, move focus to the input.
        // On touch, or with a screen reader, focus the button so that the software
        // keyboard does not appear and the screen reader cursor is not moved off the button.
        if (e.pointerType === 'mouse') inputRef.current.focus();
        else e.target.focus();
    }; // Determine the label for the increment and decrement buttons. There are 4 cases:
    //
    // 1. With a visible label that is a string: aria-label: `Increase ${props.label}`
    // 2. With a visible label that is JSX: aria-label: 'Increase', aria-labelledby: '${incrementId} ${labelId}'
    // 3. With an aria-label: aria-label: `Increase ${props['aria-label']}`
    // 4. With an aria-labelledby: aria-label: 'Increase', aria-labelledby: `${incrementId} ${props['aria-labelledby']}`
    //
    // (1) and (2) could possibly be combined and both use aria-labelledby. However, placing the label in
    // the aria-label string rather than using aria-labelledby gives more flexibility to translators to change
    // the order or add additional words around the label if needed.
    let fieldLabel = props['aria-label'] || (typeof props.label === 'string' ? props.label : '');
    let ariaLabelledby;
    if (!fieldLabel) ariaLabelledby = props.label != null ? labelProps.id : props['aria-labelledby'];
    let incrementId = useId();
    let decrementId = useId();
    let incrementButtonProps = mergeProps(incButtonProps, {
        'aria-label': incrementAriaLabel || formatMessage('increase', {
            fieldLabel
        }).trim(),
        id: ariaLabelledby && !incrementAriaLabel ? incrementId : null,
        'aria-labelledby': ariaLabelledby && !incrementAriaLabel ? incrementId + " " + ariaLabelledby : null,
        'aria-controls': inputId,
        excludeFromTabOrder: true,
        preventFocusOnPress: true,
        isDisabled: !state.canIncrement,
        onPressStart: onButtonPressStart
    });
    let decrementButtonProps = mergeProps(decButtonProps, {
        'aria-label': decrementAriaLabel || formatMessage('decrease', {
            fieldLabel
        }).trim(),
        id: ariaLabelledby && !decrementAriaLabel ? decrementId : null,
        'aria-labelledby': ariaLabelledby && !decrementAriaLabel ? decrementId + " " + ariaLabelledby : null,
        'aria-controls': inputId,
        excludeFromTabOrder: true,
        preventFocusOnPress: true,
        isDisabled: !state.canDecrement,
        onPressStart: onButtonPressStart
    });
    return {
        groupProps: _babelRuntimeHelpersExtends({
            role: 'group',
            'aria-disabled': isDisabled,
            'aria-invalid': validationState === 'invalid' ? 'true' : undefined
        }, focusWithinProps),
        labelProps,
        inputProps,
        incrementButtonProps,
        decrementButtonProps
    };
}
exports.useNumberField = useNumberField;
