"use strict";
require("core-js/stable");
require("regenerator-runtime/runtime");
var _react = _interopRequireDefault(require("react"));
var _reactDom = _interopRequireDefault(require("react-dom"));
var _excApp = _interopRequireWildcard(require("@adobe/exc-app"));
var _App = _interopRequireDefault(require("./components/App"));
require("./index.css");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop1) {
        return nodeInterop1 ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj)if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
        else newObj[key] = obj[key];
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
/*
 * <license header>
 */ /* Here you can bootstrap your application and configure the integration with the Adobe Experience Cloud Shell */ try {
    // attempt to load the Experience Cloud Runtime
    require('./exc-runtime'); // if there are no errors, bootstrap the app in the Experience Cloud Shell
    _excApp.init(bootstrapInExcShell);
} catch (e) {
    console.log('application not running in Adobe Experience Cloud Shell'); // fallback mode, run the application without the Experience Cloud Runtime
    bootstrapRaw();
}
function bootstrapRaw() {
    /* **here you can mock the exc runtime and ims objects** */ var mockRuntime = {
        on: function() {
        }
    };
    var mockIms = {
    }; // render the actual react application and pass along the runtime object to make it available to the App
    _reactDom.default.render(/*#__PURE__*/ React.createElement(_App.default, {
        runtime: mockRuntime,
        ims: mockIms,
        __source: {
            fileName: "C:\\temp\\training\\cicd_training\\adu_bcab_courseware\\web-src\\src\\index.js",
            lineNumber: 47
        },
        __self: this
    }), document.getElementById('root'));
}
function bootstrapInExcShell() {
    // get the Experience Cloud Runtime object
    var runtime = _excApp.default(); // use this to set a favicon
    // runtime.favicon = 'url-to-favicon'
    // use this to respond to clicks on the app-bar title
    // runtime.heroClick = () => window.alert('Did I ever tell you you\'re my hero?')
    // ready event brings in authentication/user info
    runtime.on('ready', (function(param) {
        var imsOrg = param.imsOrg, imsToken = param.imsToken, imsProfile = param.imsProfile, locale = param.locale;
        // tell the exc-runtime object we are done
        runtime.done();
        console.log('Ready! received imsProfile:', imsProfile);
        var ims = {
            profile: imsProfile,
            org: imsOrg,
            token: imsToken
        }; // render the actual react application and pass along the runtime and ims objects to make it available to the App
        _reactDom.default.render(/*#__PURE__*/ React.createElement(_App.default, {
            runtime: runtime,
            ims: ims,
            __source: {
                fileName: "C:\\temp\\training\\cicd_training\\adu_bcab_courseware\\web-src\\src\\index.js",
                lineNumber: 73
            },
            __self: this
        }), document.getElementById('root'));
    }).bind(this)); // set solution info, shortTitle is used when window is too small to display full title
    runtime.solution = {
        icon: 'AdobeExperienceCloud',
        title: 'trainingproject',
        shortTitle: 'JGR'
    };
    runtime.title = 'trainingproject';
}
