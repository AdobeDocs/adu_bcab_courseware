'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.withErrorBoundary = undefined;
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var _react = require('react');
var _react2 = _interopRequireDefault(_react);
var _ErrorBoundaryFallbackComponent = require('./ErrorBoundaryFallbackComponent');
var _ErrorBoundaryFallbackComponent2 = _interopRequireDefault(_ErrorBoundaryFallbackComponent);
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var babelPluginFlowReactPropTypes_proptype_ComponentType = require('react').babelPluginFlowReactPropTypes_proptype_ComponentType || require('prop-types').any;
var ErrorBoundary1 = function(_Component) {
    _inherits(ErrorBoundary2, _Component);
    function ErrorBoundary2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, ErrorBoundary2);
        for(var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ErrorBoundary2.__proto__ || Object.getPrototypeOf(ErrorBoundary2)).call.apply(_ref, [
            this
        ].concat(args))), _this), _this.state = {
            error: null,
            info: null
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }
    _createClass(ErrorBoundary2, [
        {
            key: 'componentDidCatch',
            value: function componentDidCatch(error, info) {
                var onError = this.props.onError;
                if (typeof onError === 'function') try {
                    /* istanbul ignore next: Ignoring ternary; can’t reproduce missing info in test environment. */ onError.call(this, error, info ? info.componentStack : '');
                } catch (ignoredError) {
                }
                this.setState({
                    error: error,
                    info: info
                });
            }
        },
        {
            key: 'render',
            value: function render() {
                var _props = this.props, children = _props.children, FallbackComponent = _props.FallbackComponent;
                var _state = this.state, error = _state.error, info = _state.info;
                if (error !== null) return _react2.default.createElement(FallbackComponent, {
                    componentStack: // istanbul ignore next: Ignoring ternary; can’t reproduce missing info in test environment.
                    info ? info.componentStack : '',
                    error: error
                });
                return children || null;
            }
        }
    ]);
    return ErrorBoundary2;
}(_react.Component);
ErrorBoundary1.defaultProps = {
    FallbackComponent: _ErrorBoundaryFallbackComponent2.default
};
ErrorBoundary1.propTypes = {
    error: typeof Error === 'function' ? require('prop-types').instanceOf(Error) : require('prop-types').any,
    info: require('prop-types').shape({
        componentStack: require('prop-types').string.isRequired
    })
};
var withErrorBoundary = exports.withErrorBoundary = function withErrorBoundary1(Component, FallbackComponent, onError) {
    var Wrapped = function Wrapped1(props) {
        return _react2.default.createElement(ErrorBoundary1, {
            FallbackComponent: FallbackComponent,
            onError: onError
        }, _react2.default.createElement(Component, props));
    };
    // Format for display in DevTools
    var name = Component.displayName || Component.name;
    Wrapped.displayName = name ? 'WithErrorBoundary(' + name + ')' : 'WithErrorBoundary';
    return Wrapped;
};
withErrorBoundary.propTypes = babelPluginFlowReactPropTypes_proptype_ComponentType === require('prop-types').any ? {
} : babelPluginFlowReactPropTypes_proptype_ComponentType;
exports.default = ErrorBoundary1;
