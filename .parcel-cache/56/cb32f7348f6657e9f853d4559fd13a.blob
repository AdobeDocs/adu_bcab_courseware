var { useEffect  } = require("react");
var { useSingleSelectListState  } = require("@react-stately/list");
var _babelRuntimeHelpersExtends = $parcel$interopDefault(require("@babel/runtime/helpers/extends"));
function $parcel$interopDefault(a) {
    return a && a.__esModule ? a.default : a;
}
/**
 * Provides state management for a Tabs component. Tabs include a TabList which tracks
 * which tab is currently selected and displays the content associated with that Tab in a TabPanel.
 */ function useTabListState(props) {
    let state = useSingleSelectListState(_babelRuntimeHelpersExtends({
    }, props, {
        suppressTextValueWarning: true
    }));
    useEffect(()=>{
        // Ensure a tab is always selected (in case no selected key was specified or if selected item was deleted from collection)
        let selectedKey = state.selectedKey;
        if (state.selectionManager.isEmpty || !state.collection.getItem(selectedKey)) {
            selectedKey = state.collection.getFirstKey();
            state.selectionManager.replaceSelection(selectedKey);
        }
        if (state.selectionManager.focusedKey == null) state.selectionManager.setFocusedKey(selectedKey);
    }, [
        state.selectionManager,
        state.selectedKey,
        state.collection
    ]);
    return state;
}
exports.useTabListState = useTabListState;
