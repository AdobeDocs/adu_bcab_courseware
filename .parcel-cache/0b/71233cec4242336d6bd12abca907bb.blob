"use strict";
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = style;
var _camelizeStyle = _interopRequireDefault(require("../util/camelizeStyle"));
var _hyphenateStyle = _interopRequireDefault(require("../util/hyphenateStyle"));
var _getComputedStyle2 = _interopRequireDefault(require("./getComputedStyle"));
var _removeStyle = _interopRequireDefault(require("./removeStyle"));
var _properties = require("../transition/properties");
var _isTransform = _interopRequireDefault(require("../transition/isTransform"));
function style(node, property, value) {
    var css = '';
    var transforms = '';
    var props = property;
    if (typeof property === 'string') {
        if (value === undefined) return node.style[_camelizeStyle.default(property)] || _getComputedStyle2.default(node).getPropertyValue(_hyphenateStyle.default(property));
        else (props = {
        })[property] = value;
    }
    Object.keys(props).forEach(function(key) {
        var value1 = props[key];
        if (!value1 && value1 !== 0) _removeStyle.default(node, _hyphenateStyle.default(key));
        else if (_isTransform.default(key)) transforms += key + "(" + value1 + ") ";
        else css += _hyphenateStyle.default(key) + ": " + value1 + ";";
    });
    if (transforms) css += _properties.transform + ": " + transforms + ";";
    node.style.cssText += ';' + css;
}
module.exports = exports["default"];
